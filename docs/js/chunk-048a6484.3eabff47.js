(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-048a6484"],{bb51:function(n,e,t){"use strict";t.r(e);var r=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("div",{staticClass:"home-wrapper"},[t("a-collapse",[t("a-collapse-panel",{attrs:{header:"封装axios请求数据"}},[t("request-doc")],1),t("a-collapse-panel",{attrs:{header:"将扁平数据格式转换为树状数据结构"}},[t("tree-data")],1)],1)],1)},a=[],o=function(){var n=this,e=n.$createElement;n._self._c;return n._m(0)},i=[function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("div",[t("pre",[n._v("    import axios from 'axios'\n    import setting from '@/setting'\n    import {\n      notification\n    } from 'antd'\n  ")]),t("pre",[n._v("    const iSFormDataType = setting.contentType === 'formData';\n    const formDataContentType = 'application/x-www-form-urlencoded; charset=utf-8'\n    const jsonContentType = 'application/json; charset=utf-8'\n  ")]),t("pre",[n._v("    let instance = axios.create({\n      baseURL: setting.baseUrl,\n      timeout: 1000 * 10,\n      headers: {\n        'Accept': \"application/json; charset=utf-8\",\n        'Content-Type': iSFormDataType ? formDataContentType : jsonContentType\n      },\n      responseType: 'json',\n      transformRequest: [function (data) {\n        if (data) {\n          // 对data进行任意转换处理\n          if (iSFormDataType) {\n            let formDataString = '';\n            let key;\n            for (key in data) {\n              formDataString += '&' + key + '=' + data[key];\n            }\n            formDataString = formDataString.slice(1);\n            return formDataString;\n          } else {\n            return data;\n          }\n        }\n      }]\n    });\n  ")]),t("pre",[n._v("    // 添加请求拦截器\n    instance.interceptors.request.use(function (config) {\n      // 对于请求统一增加token选项\n      // config.headers.token = token;\n      return config;\n    }, function (error) {\n      // 对请求错误做些什么\n      notification.error({\n        message: '发送请求之前，请求错误',\n        description: error.message\n      });\n    });\n  ")]),t("pre",[n._v("    // 添加响应拦截器\n    instance.interceptors.response.use(function (response) {\n      // 对响应数据做点什么\n      return response.data;\n    }, function (error) {\n      // 对响应错误做点什么\n      notification.error({\n        message: '发送请求之后，响应错误',\n        description: error.message\n      });\n    });\n  ")]),t("pre",[n._v("    export default instance;")])])}],s={name:"request"},c=s,l=t("2877"),p=Object(l["a"])(c,o,i,!1,null,null,null),f=p.exports,u=function(){var n=this,e=n.$createElement;n._self._c;return n._m(0)},m=[function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("div",[t("pre",[n._v("    const formatDataToTree = list => {\n      let arr = [];\n      list.forEach((item, index) => {\n        let isRoot = true;\n        list.forEach(item2 => {\n          if (item.pid && item.pid === item2.id) {\n            isRoot = false;\n            !Array.isArray(item2.children) && (item2.children = []);\n            item2.children.push(item);\n          }\n        });\n        isRoot && arr.push(index);\n      })\n      return list.filter((item, index) => arr.indexOf(index) > -1);\n    }")])])}],d={name:"treedata"},h=d,_=Object(l["a"])(h,u,m,!1,null,null,null),v=_.exports,g={name:"home",components:{RequestDoc:f,TreeData:v}},y=g,x=(t("de16"),Object(l["a"])(y,r,a,!1,null,null,null));e["default"]=x.exports},de16:function(n,e,t){"use strict";var r=t("f3e7"),a=t.n(r);a.a},f3e7:function(n,e,t){}}]);